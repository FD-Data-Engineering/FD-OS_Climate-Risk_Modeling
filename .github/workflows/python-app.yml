# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

# This execution is in beta test for an new GitHub Ci/CD pipeline deployment

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Modeling/python-library

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        # Semantic version range syntax or exact version of a Python version
          python-version: '3.11'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
          # You can test your matrix by printing the current Python version
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint Model with flake8
      run: |
        pwd
        cd risk-modeling-osf 
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Lint WebApp with flake8
      run: |
        pwd
        cd webapp 
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: build risk modeling egg with python3
      run: |
        cd risk-modeling-osf
        python create_model_egg.py
        cd ..
        python deploy_risk_modeling_app.py

    - name: build webapp egg with python3
      run: |
        cd webapp
        python create_webapp.py
        cd ..
        python launch_model_webapp.py

    - name: Test Model build with pytest
      run: |
        cd risk-modeling-osf 
        pytest
        cd ..
   - name: Test WebApp build with pytest
      run: |        
        cd webapp
        pytest
        cd ..
